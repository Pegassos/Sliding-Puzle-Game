{"version":3,"sources":["Game.js","App.js","index.js"],"names":["Game","initiateGame","rand","game","length","Math","floor","random","includes","push","useState","setGame","win","setWin","moveCount","setMoves","moveItem","move","e","keyCode","isNaN","console","log","start","indexOf","end","undefined","canMove","gameUpdate","temp","swapPosition","document","onkeyup","useEffect","initialGameState","every","el","index","alert","onClick","className","map","square","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+OAuKeA,MArKf,WACE,IAAMC,EAAe,WAEnB,IADA,IAAeC,EAAXC,EAAO,GACLA,EAAKC,OAAS,IAClBF,EAAOG,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EACpCJ,EAAKK,SAASN,IAChBC,EAAKM,KAAKP,GAGd,OADAC,EAAKM,KAAK,GACHN,GAIT,EAAwBO,mBAAST,KAAjC,mBAAOE,EAAP,KAAaQ,EAAb,KACA,EAAsBD,oBAAS,GAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAA8BH,mBAAS,GAAvC,mBAAOI,EAAP,KAAkBC,EAAlB,KA+BMC,EAAW,SAAAC,GAAI,OAAI,SAAAC,GAEL,KAAdA,EAAEC,QACJF,EAAO,KAEc,KAAdC,EAAEC,QACTF,EAAO,OAEc,KAAdC,EAAEC,QACTF,EAAO,OAEc,KAAdC,EAAEC,UACTF,EAAO,SAILG,MAAMH,IAAwB,IAAfd,EAAKc,KACF,IAAjBd,EAAKc,EAAK,GACXA,EAAO,OACkB,IAAjBd,EAAKc,EAAK,GAClBA,EAAO,QACkB,IAAjBd,EAAKc,EAAK,GAClBA,EAAO,KACkB,IAAjBd,EAAKc,EAAK,KAClBA,EAAO,SAKXI,QAAQC,IAAIL,GAEZ,IAAMM,EA1CCpB,EAAKqB,QAAQ,GA2ChBC,EAAM,KAGV,OAAOR,GACL,IAAK,KACHQ,EAAMF,EAAQ,EACd,MACF,IAAK,OACHE,EAAMF,EAAQ,EACd,MACF,IAAK,QACHE,EAAMF,EAAQ,EACd,MACF,IAAK,OACHE,EAAMF,EAAQ,GAtDJ,SAACA,EAAOE,GACtB,QACG,CAAC,EAAE,EAAE,IAAIjB,SAASe,IAAU,CAAC,EAAE,EAAE,IAAIf,SAASiB,IAC9C,CAAC,EAAE,EAAE,IAAIjB,SAASe,IAAU,CAAC,EAAE,EAAE,IAAIf,SAASiB,SACjCC,IAAdvB,EAAKsB,IAyDJE,CAAQJ,EAAOE,GAKhBJ,QAAQC,IAAI,+BA/EK,SAACC,EAAOE,GAC3B,IAAIG,EAAU,YAAOzB,GAEf0B,EAAOD,EAAWL,GACxBK,EAAWL,GAASK,EAAWH,GAC/BG,EAAWH,GAAOI,EAClBlB,EAAQiB,GAqENE,CAAaP,EAAOE,GACpBV,EAASD,EAAY,MAoBzB,OAbAiB,SAASC,QAAUhB,IAGnBiB,qBAAU,WACR,IAAMC,EAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAC9DrB,EAAOV,EAAKgC,OAAM,SAACC,EAAIC,GAAL,OAAeD,IAAOF,EAAiBG,SACxD,CAAClC,IAGJ8B,qBAAU,WACRK,MAAM,2DACL,IAEA1B,EAEC,gCACE,0DAA2BE,EAA3B,YACA,wBAAQyB,QAAS,kBAAM1B,GAAO,IAA9B,wBAMJ,gCACE,mCACE,8BAAK,wBAAQ0B,QAnHD,WAChB5B,EAAQV,KACRc,EAAS,IAiHA,0BACL,8CAAeD,QAGjB,qBAAK0B,UAAU,OAAf,SACGrC,EAAKsC,KAAI,SAACL,EAAIC,GACb,IAAIK,EAAS,SAKb,OAJU,IAAPN,EACDM,GAAU,gBACJN,EAAK,IAAM,IACjBM,GAAU,gBAEV,qBAAKF,UAAWE,EAAoBH,QAASvB,EAASqB,GAAtD,SACE,6BAAKD,KADsBC,QAOnC,sBAAKG,UAAU,gBAAf,UACE,wBAAQD,QAASvB,EAAS,MAA1B,gBACA,gCACE,wBAAQuB,QAASvB,EAAS,QAA1B,kBACA,wBAAQuB,QAASvB,EAAS,SAA1B,sBAEF,wBAAQuB,QAASvB,EAAS,QAA1B,yBCnJO2B,MAVf,WAGE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCHNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,W","file":"static/js/main.556e9f48.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction Game() {\r\n  const initiateGame = () => {\r\n    let game = [], rand\r\n    while(game.length < 15) {\r\n      rand = Math.floor(Math.random() * 15) + 1\r\n      if(!game.includes(rand))\r\n        game.push(rand)\r\n    }\r\n    game.push(0)\r\n    return game\r\n  }\r\n  \r\n  \r\n  const [game, setGame] = useState(initiateGame())\r\n  const [win, setWin] = useState(false)\r\n  const [moveCount, setMoves] = useState(0)\r\n\r\n  // utility methods-----------------------------\r\n  const resetGame = () => {\r\n    setGame(initiateGame())\r\n    setMoves(0)\r\n  }\r\n  \r\n\r\n  \r\n  const swapPosition = (start, end) => {\r\n    let gameUpdate = [...game]\r\n    \r\n    const temp = gameUpdate[start]\r\n    gameUpdate[start] = gameUpdate[end]\r\n    gameUpdate[end] = temp\r\n    setGame(gameUpdate)\r\n  }\r\n\r\n  const getCurrentPosition = () => {\r\n    return game.indexOf(0)\r\n  }\r\n\r\n  const canMove = (start, end) => {\r\n    return (\r\n      ([3,7,11].includes(start) && [4,8,12].includes(end)) ||\r\n      ([4,8,12].includes(start) && [3,7,11].includes(end)) ||\r\n      game[end] === undefined\r\n    ) ? false : true\r\n  }\r\n  \r\n  const moveItem = move => e => {\r\n    // move with arrow keys\r\n    if (e.keyCode === 38) {\r\n      move = 'up'\r\n    }\r\n    else if (e.keyCode === 40) {\r\n      move = 'down'\r\n    }\r\n    else if (e.keyCode === 37) {\r\n      move = 'left'\r\n    }\r\n    else if (e.keyCode === 39) {\r\n      move = 'right'\r\n    }\r\n\r\n    // move on click\r\n    if(!isNaN(move) && game[move] !== 0) {\r\n      if(game[move-1] === 0) {\r\n        move = 'left'\r\n      } else if(game[move+1] === 0) {\r\n        move = 'right'\r\n      } else if(game[move-4] === 0) {\r\n        move = 'up'\r\n      } else if(game[move+4] === 0) {\r\n        move = 'down'\r\n      }\r\n    }\r\n\r\n    // move with buttons\r\n    console.log(move)\r\n\r\n    const start = getCurrentPosition()\r\n    let end = null\r\n    // let end = (isNaN(move) || game[move] === 0) ? null : move // <-- hack the game :)\r\n\r\n    switch(move) {\r\n      case 'up':\r\n        end = start + 4\r\n        break\r\n      case 'left':\r\n        end = start + 1\r\n        break\r\n      case 'right':\r\n        end = start - 1\r\n        break\r\n      case 'down':\r\n        end = start - 4\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    if(canMove(start, end)) { \r\n      swapPosition(start, end)\r\n      setMoves(moveCount + 1) \r\n    }\r\n    else\r\n      console.log('Cant move. Out of Border!')\r\n  }\r\n\r\n  // onKeyUp event handler\r\n  document.onkeyup = moveItem()\r\n\r\n  // chek win condition\r\n  useEffect(() => {\r\n    const initialGameState = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0]\r\n    setWin(game.every((el, index) => el === initialGameState[index]))\r\n  }, [game])\r\n\r\n  // display controls message when the app loads\r\n  useEffect(() => {\r\n    alert('Use buttons, arrow keys or click on a square to move.')\r\n  }, [])\r\n\r\n  if(win){\r\n    return (\r\n      <div>\r\n        <h1>{`Congrats, u won in ${moveCount} moves`}</h1>\r\n        <button onClick={() => setWin(false)}>Go back</button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <header>\r\n        <div><button onClick={resetGame}>Reset Game</button></div>\r\n        <h1>{`Moves: ${moveCount}`}</h1>\r\n      </header>\r\n\r\n      <div className=\"game\">\r\n        {game.map((el, index) => {\r\n          let square = 'square'\r\n          if(el === 0)\r\n            square += ' empty-square'\r\n          else if(el % 2 === 0)\r\n            square += ' even-square' \r\n          return (\r\n            <div className={square} key={index} onClick={moveItem(index)} >\r\n              <h1>{el}</h1>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"game-controls\">\r\n        <button onClick={moveItem('up')} >UP</button>\r\n        <div>\r\n          <button onClick={moveItem('left')} >LEFT</button>\r\n          <button onClick={moveItem('right')} >RIGHT</button>\r\n        </div>\r\n        <button onClick={moveItem('down')} >DOWN</button>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game","import './App.css';\nimport Game from './Game';\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}